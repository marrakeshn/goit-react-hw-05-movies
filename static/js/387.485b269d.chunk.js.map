{"version":3,"file":"static/js/387.485b269d.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Loader.jsx","services/tmdb-api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 24px;\n  row-gap: 16px;\n\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  padding: 8px;\n  width: 200px;\n\n  border: 1px solid grey;\n  border-radius: 4px;\n`;\n\nexport const WraperInfo = styled.div`\n  margin-top: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ActorName = styled.p`\n  padding: 0;\n  margin: 0 0 8px;\n  font-size: 16px;\n  font-weight: 700;\n  color: #fff;\n`;\n\nexport const Character = styled.p`\n  padding: 0;\n  margin: 0;\n  font-size: 16px;\n  color: #fff;\n`;\n\nexport const ActorImg = styled.img`\n  display: block;\n  margin: 0 auto;\n`;","import { Suspense, useState, useEffect } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { loadMovieCast } from 'services/tmdb-api';\nimport { Loader } from 'components/Loader';\nimport {\n  List,\n  ListItem,\n  WraperInfo,\n  ActorName,\n  Character,\n  ActorImg,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const [data, setData] = useState([]);\n  const { id } = useParams();\n  const [ error, setError ] = useState('');\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function fetch() {\n      try {\n        setStatus('pending');\n        const result = await loadMovieCast(id, abortController);\n        setData(result.data.cast);\n        setStatus('responded');\n      } catch (err) {\n        err.code !== 'ERR_CANCELED' && setError(err.message || err)\n      }\n    }\n\n    fetch();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [id]);\n\n  return (\n  <>\n    {error && <p>{error}</p>}\n      {status === 'responded' && (\n       <>\n        {data.length > 0 ? (\n          <List>\n            {data.map(({ character, name, profile_path, cast_id }) => {\n              return (\n                <ListItem key={cast_id}>\n                    <ActorImg\n                      src={\n                        profile_path\n                          ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                          : 'https://via.placeholder.com/100x150'\n                      }\n                      width=\"100\"\n                      alt={name}\n                    />\n                    <WraperInfo>\n                      <ActorName>{name} </ActorName>\n                      <Character> {character}</Character>\n                    </WraperInfo>\n                </ListItem>\n              )\n            })}\n          </List>\n        ) : (\n          <p>We don't have any cast for this movie :( </p>\n        )}\n       </>\n      )}\n      {status === 'pending' && <Loader />}\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n  </>\n);\n}\n\nexport default Cast;\n\n\n","import { Dna } from 'react-loader-spinner';\nimport { useState, useEffect } from 'react';\n\nconst delay = 2000;\nlet setTimeoutInstance;\n  \n\nexport const Loader = ({ pending }) => {\n  const [isExpired, setIsExpired] = useState(true);\n\n  useEffect(() => {\n    if (pending) {\n      setIsExpired(true);\n\n      if (setTimeoutInstance) {\n        clearTimeout(setTimeoutInstance);\n      }\n      setTimeoutInstance = setTimeout(() => {\n        setIsExpired(false);\n      }, delay);\n    }\n  }, [pending]);\n\n  if (!isExpired) {\n    return (\n        <Dna\n            visible={true}\n            height=\"150\"\n            width=\"150\"\n            ariaLabel=\"dna-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"dna-wrapper\"\n        />\n    );\n  }\n};","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nconst API_KEY = 'f341564f871ad54342c422dd44d9e8b4';\n\nconst addParams = abort => {\n  return {\n    signal: abort.signal,\n    params: { api_key: API_KEY },\n  };\n};\n\nexport const loadTrendList = async abort => {\n  return await axios.get('/3/trending/movie/week', addParams(abort));\n};\n\nexport const loadSearchList = async (search, abort) => {\n  return await axios.get(`3/search/movie`, {\n    signal: abort.signal,\n    params: { api_key: API_KEY, query: search },\n  });\n};\n\nexport const loadMovieFulInfo = async (id, abort) => {\n  return await axios.get(`3/movie/${id}`, addParams(abort));\n};\n\nexport const loadMovieCast = async (id, abort) => {\n  return await axios.get(`3/movie/${id}/credits`, addParams(abort));\n};\n\nexport const loadMovieReviews = async (id, abort) => {\n  return await axios.get(`3/movie/${id}/reviews`, addParams(abort));\n};"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","WraperInfo","_templateObject3","ActorName","_templateObject4","Character","_templateObject5","ActorImg","_templateObject6","_useState","useState","_useState2","_slicedToArray","data","setData","id","useParams","_useState3","_useState4","error","setError","_useState5","_useState6","status","setStatus","useEffect","abortController","AbortController","_fetch","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","loadMovieCast","sent","cast","t0","code","message","stop","apply","arguments","fetch","abort","_jsxs","_Fragment","children","_jsx","length","map","_ref","character","name","profile_path","cast_id","src","concat","width","alt","Loader","Suspense","fallback","Outlet","setTimeoutInstance","pending","isExpired","setIsExpired","clearTimeout","setTimeout","Dna","visible","height","ariaLabel","wrapperStyle","wrapperClass","axios","API_KEY","addParams","signal","params","api_key","loadTrendList","abrupt","_x","loadSearchList","_ref2","_callee2","search","_context2","query","_x2","_x3","loadMovieFulInfo","_ref3","_callee3","_context3","_x4","_x5","_ref4","_callee4","_context4","_x6","_x7","loadMovieReviews","_ref5","_callee5","_context5","_x8","_x9"],"sourceRoot":""}