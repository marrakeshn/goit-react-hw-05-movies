{"version":3,"file":"static/js/387.0d24b7c9.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/tmdb-api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 24px;\n  row-gap: 16px;\n\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  padding: 8px;\n  width: 200px;\n\n  border: 1px solid grey;\n  border-radius: 4px;\n`;\n\nexport const WraperInfo = styled.div`\n  margin-top: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ActorName = styled.p`\n  padding: 0;\n  margin: 0 0 8px;\n  font-size: 16px;\n  font-weight: 700;\n  color: #fff;\n`;\n\nexport const Character = styled.p`\n  padding: 0;\n  margin: 0;\n  font-size: 16px;\n  color: #fff;\n`;\n\nexport const ActorImg = styled.img`\n  display: block;\n  margin: 0 auto;\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { loadMovieCast } from 'services/tmdb-api';\nimport { Loader } from 'components/Loader';\nimport {\n  List,\n  ListItem,\n  WraperInfo,\n  ActorName,\n  Character,\n  ActorImg,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const [data, setData] = useState([]);\n  const { id } = useParams();\n  const [ error, setError ] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function fetch() {\n      setIsLoading(true)\n      try {\n        const result = await loadMovieCast(id, abortController);\n        setData(result.data.cast);\n      } catch (err) {\n        err.code !== 'ERR_CANCELED' && setError(err.message || err)\n      }\n      setIsLoading(false)\n    }\n\n    fetch();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [id]);\n\n  return (\n  <>\n    {error && <p>{error}</p>}\n      {isLoading ? <Loader /> : (\n       <>\n        {data.length > 0 ? (\n          <List>\n            {data.map(({ character, name, profile_path, cast_id }) => {\n              return (\n                <ListItem key={cast_id}>\n                    <ActorImg\n                      src={\n                        profile_path\n                          ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                          : 'https://via.placeholder.com/100x150'\n                      }\n                      width=\"100\"\n                      alt={name}\n                    />\n                    <WraperInfo>\n                      <ActorName>{name} </ActorName>\n                      <Character> {character}</Character>\n                    </WraperInfo>\n                </ListItem>\n              )\n            })}\n          </List>\n        ) : (\n          <p>We don't have any cast for this movie :( </p>\n        )}\n       </>\n      )}\n  </>\n);\n}\n\nexport default Cast;\n\n\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nconst API_KEY = 'f341564f871ad54342c422dd44d9e8b4';\n\nconst addParams = abort => {\n  return {\n    signal: abort.signal,\n    params: { api_key: API_KEY },\n  };\n};\n\nexport const loadTrendList = async abort => {\n  return await axios.get('/3/trending/movie/week', addParams(abort));\n};\n\nexport const loadSearchList = async (search) => {\n  return await axios.get(`3/search/movie`, {\n    params: { api_key: API_KEY, query: search },\n  });\n};\n\nexport const loadMovieFulInfo = async (id, abort) => {\n  return await axios.get(`3/movie/${id}`, addParams(abort));\n};\n\nexport const loadMovieCast = async (id, abort) => {\n  return await axios.get(`3/movie/${id}/credits`, addParams(abort));\n};\n\nexport const loadMovieReviews = async (id, abort) => {\n  return await axios.get(`3/movie/${id}/reviews`, addParams(abort));\n};"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","WraperInfo","_templateObject3","ActorName","_templateObject4","Character","_templateObject5","ActorImg","_templateObject6","_useState","useState","_useState2","_slicedToArray","data","setData","id","useParams","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useEffect","abortController","AbortController","_fetch","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","loadMovieCast","sent","cast","t0","code","message","stop","apply","arguments","fetch","abort","_jsxs","_Fragment","children","_jsx","Loader","length","map","_ref","character","name","profile_path","cast_id","src","concat","width","alt","axios","API_KEY","addParams","signal","params","api_key","loadTrendList","abrupt","_x","loadSearchList","_ref2","_callee2","search","_context2","query","_x2","loadMovieFulInfo","_ref3","_callee3","_context3","_x3","_x4","_ref4","_callee4","_context4","_x5","_x6","loadMovieReviews","_ref5","_callee5","_context5","_x7","_x8"],"sourceRoot":""}